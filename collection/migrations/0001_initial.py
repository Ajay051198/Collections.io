# Generated by Django 2.2.3 on 2020-08-16 10:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('desc', models.CharField(default=' ', max_length=500)),
                ('permission', models.CharField(choices=[('all', 'all'), ('none', 'none'), ('selective', 'selective')], default='none', max_length=20)),
                ('visibility', models.CharField(choices=[('public', 'public'), ('private', 'private')], default='public', max_length=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allowed_users', models.ManyToManyField(related_name='allowed_collections', to=settings.AUTH_USER_MODEL)),
                ('followers', models.ManyToManyField(related_name='followed_collections', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('my_followers', models.CharField(blank=True, default=' ', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('name', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('image_urls', models.CharField(default='', max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=100)),
                ('link', models.CharField(max_length=500)),
                ('type_of', models.CharField(choices=[('podcast', 'podcast'), ('article', 'article')], max_length=20)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snippets', to='collection.Collection')),
                ('hearts', models.ManyToManyField(related_name='hearted_snippets', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snippets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=1000)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('snippet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='collection.Snippet')),
                ('upvotes', models.ManyToManyField(related_name='upvoted_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='collection',
            name='tags',
            field=models.ManyToManyField(related_name='collections', to='collection.Tag'),
        ),
    ]
